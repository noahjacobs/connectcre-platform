import type { PROPERTY_TYPES, PROJECT_STATUSES, USER_PERSONAS, COMPANY_CATEGORIES } from '@/lib/constants';

// Extract types from constants
export type PropertyType = typeof PROPERTY_TYPES[number];
export type ProjectStatus = typeof PROJECT_STATUSES[number];
export type UserPersona = typeof USER_PERSONAS[number];
export type CompanyCategory = typeof COMPANY_CATEGORIES[number];

// Database types (will be auto-generated by Drizzle later)
export interface Profile {
  id: string;
  clerk_id: string;
  email: string;
  full_name: string | null;
  avatar_url: string | null;
  persona: UserPersona | null;
  created_at: Date;
  updated_at: Date;
}

export interface Company {
  id: string;
  name: string;
  description: string | null;
  logo_url: string | null;
  website_url: string | null;
  contact_email: string | null;
  contact_phone: string | null;
  categories: CompanyCategory[];
  status: 'pending' | 'approved';
  is_verified: boolean;
  created_at: Date;
  updated_at: Date;
}

export interface Project {
  id: string;
  title: string;
  description: string | null;
  address: string | null;
  latitude: number | null;
  longitude: number | null;
  city: string | null;
  neighborhood: string | null;
  status: ProjectStatus;
  property_types: PropertyType[];
  images: string[];
  metadata: Record<string, any>;
  company_id: string | null;
  created_at: Date;
  updated_at: Date;
  published_at: Date | null;
}

export interface Article {
  id: string;
  title: string;
  subtitle: string | null;
  content: any; // Rich text JSON
  images: string[];
  author_id: string;
  project_id: string | null;
  city: string | null;
  neighborhood: string | null;
  tags: string[];
  created_at: Date;
  updated_at: Date;
  published_at: Date | null;
}

export interface Bookmark {
  id: string;
  user_id: string;
  item_type: 'article' | 'project';
  item_id: string;
  created_at: Date;
}
